#!/bin/bash
set -e


# Define Colors

NO_COLOR='\033[0m'

GREEN='\033[0;32m'
YELLOW='\033[1;33m'


echo -e 'Starting deployment...\n'


# Install role dependencies

echo -e 'Installing ansible role dependencies...'
export ANSIBLE_ROLES_PATH="~/.ansible/roles"
ansible-galaxy install -r deploy/requirements.yml --force >/dev/null


# Set up Ansible vault credentials

if [[ -z "$ANSIBLE_VAULT_PASSWORD" ]]; then
    echo -e "\n\n${YELLOW}ANSIBLE_VAULT_PASSWORD not set, attempting to continue anyway.${NO_COLOR}\n\n"
fi

export ANSIBLE_VAULT_PASSWORD_FILE="$(mktemp)"
echo "$ANSIBLE_VAULT_PASSWORD" > "$ANSIBLE_VAULT_PASSWORD_FILE"


# Create SSH key for deployment

TEMP_KEY_DIR=$(mktemp -d)
TEMP_KEY_PRIVATE="$TEMP_KEY_DIR/deploy-key"
echo -e "\nCreating deployment SSH key..."
ssh-keygen -b 4096 -t rsa -N '' -C 'Temporary deploy key' -f $TEMP_KEY_PRIVATE >/dev/null

echo "Created deploy key '$TEMP_KEY_PRIVATE'"


# Detect environment. If we are running for a tagged commit, we should deploy
# to production, otherwise we should deploy to develop.

if [[ -z "$TRAVIS_TAG" ]]; then
    cat << EOF


===================================================
This is not a tagged release. Deploying to staging.

Branch: $TRAVIS_BRANCH
===================================================


EOF
    ANSIBLE_VERSION=$TRAVIS_BRANCH
else
    cat << EOF


=================================================
Detected tagged release. Deploying to production.

Tag: $TRAVIS_TAG
=================================================


EOF

    ANSIBLE_VERSION=$TRAVIS_TAG
    ANSIBLE_EXTRA_OPTS='-e env=prod'
fi


# Run Ansible playbook

export ANSIBLE_HOST_KEY_CHECKING=False

ansible-playbook \
  --private-key $TEMP_KEY_PRIVATE \
  -e "app_repo_version=$ANSIBLE_VERSION" \
  -e "ami_builder_key_file=${TEMP_KEY_PRIVATE}.pub" \
  deploy/deploy.yml \
  $ANSIBLE_EXTRA_OPTS


# Cleanup

echo -e '\n\nCleaning up files:'

srm $ANSIBLE_VAULT_PASSWORD_FILE
echo '  Shredded ansible vault password file'

srm -r $TEMP_KEY_DIR
echo '  Shredded directory with deploy keys'


echo -e "\n\n${GREEN}Deployment completed successfully${NO_COLOR}"
