---
# NGINX Configuration

nginx_site_conf_name: "{{ inventory_hostname }}.conf"
nginx_socket: 'http://{{ gunicorn_socket_unix }}'

nginx_site_servers:
  - name: "{{ inventory_hostname }}"
    listen: 80
    extra_params: |
          client_max_body_size 100M;

          location = /favicon.ico {
              access_log off;
          }

          location / {
              include proxy_params;
              proxy_pass {{ nginx_socket }};
          }


# Letsencrypt Settings

letsencrypt_email: tech@knowmetools.com


# Django Configuration

app_name: km-api
app_package: km_api

app_repo: https://github.com/knowmetools/km-api

app_required_packages:
  - build-essential
  - libjpeg-turbo8
  - libpq-dev
  - python3-dev
  - zlib1g

django_settings_module: km_api.production_settings

django_debug: false
django_secret_key: "{{ vault_django_secret_key }}"

django_admin_email: tech@knowmetools.com
django_admin_password: "{{ vault_django_admin_password }}"

django_databases:
  default:
    ENGINE: django.db.backends.postgresql_psycopg2
    NAME: "{{ db_name }}"
    USER: "{{ db_username }}"
    PASSWORD: "{{ db_password }}"
    HOST: "{{ db_endpoint }}"
    PORT: 5432

django_manage_commands:
  - 'collectstatic --no-input'
  - buildwatson


django_project_settings:
  ALLOWED_HOSTS:
    - localhost
    - "{{ inventory_hostname }}"

  AWS_STORAGE_BUCKET_NAME: "'{{ static_bucket }}'"
  MAILCHIMP_API_KEY: "'{{ vault_mailchimp_api_key }}'"
  MAILCHIMP_ENABLED: true
  MAILCHIMP_LIST_ID: "'{{ mailchimp_list_id }}'"
  RAVEN_CONFIG:
    dsn: "{{ vault_sentry_dsn }}"
    environment: "{{ sentry_environment }}"
    release: '1.0.1'

  REST_EMAIL_AUTH:
    EMAIL_VERIFICATION_URL: "{{ email_verification_url }}"
    PASSWORD_RESET_URL: "{{ password_reset_url }}"
    REGISTRATION_SERIALIZER: account.serializers.RegistrationSerializer


django_logging:
  version: 1
  disable_existing_loggers: false
  formatters:
    standard:
      datefmt: '%d/%b/%Y %H:%M:%S'
      format: '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s'
  handlers:
    'null':
      level: DEBUG
      class: logging.NullHandler
    sentry:
      level: WARNING
      class: raven.contrib.django.raven_compat.handlers.SentryHandler
      formatter: standard
    watchtower:
      level: INFO
      class: watchtower.CloudWatchLogHandler
      log_group: "{{ aws_application_name }}"
  loggers:
    account:
      level: INFO
      handlers:
        - sentry
        - watchtower
    custom_storages:
      level: INFO
      handlers:
        - sentry
        - watchtower
    django:
      level: WARNING
      handlers:
        - sentry
        - watchtower
      propagate: false
    django.request:
      level: ERROR
      propagate: true
    django.security.DisallowedHost:
      handlers:
        - 'null'
      propagate: false
    km_auth:
      level: INFO
      handlers:
        - sentry
        - watchtower
    know_me:
      level: INFO
      handlers:
        - sentry
        - watchtower
    mailing_list:
      level: INFO
      handlers:
        - sentry
        - watchtower
    rest_email_auth:
      level: INFO
      handlers:
        - sentry
        - watchtower
    templated_email:
      level: INFO
      handlers:
        - sentry
        - watchtower


# Gunicorn Configuration

gunicorn_environment:
  AWS_DEFAULT_REGION: "{{ aws_region }}"
